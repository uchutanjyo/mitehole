[{"/home/matt/Documents/new-personal-projects/mitehole/src/index.js":"1","/home/matt/Documents/new-personal-projects/mitehole/src/App.js":"2","/home/matt/Documents/new-personal-projects/mitehole/src/Music.js":"3","/home/matt/Documents/new-personal-projects/mitehole/src/Contact.js":"4","/home/matt/Documents/new-personal-projects/mitehole/src/Home.js":"5","/home/matt/Documents/new-personal-projects/mitehole/src/Player.js":"6","/home/matt/Documents/new-personal-projects/mitehole/src/Buy.js":"7","/home/matt/Documents/new-personal-projects/mitehole/src/About.js":"8","/home/matt/Documents/new-personal-projects/mitehole/src/components/data.js":"9","/home/matt/Documents/new-personal-projects/mitehole/src/components/Paragraph.js":"10","/home/matt/Documents/new-personal-projects/mitehole/src/components/Modal.js":"11","/home/matt/Documents/new-personal-projects/mitehole/src/components/Albums.js":"12","/home/matt/Documents/new-personal-projects/mitehole/src/components/Main.js":"13","/home/matt/Documents/new-personal-projects/mitehole/src/components/Post.js":"14","/home/matt/Documents/new-personal-projects/mitehole/src/components/MusicPlayer.js":"15"},{"size":221,"mtime":1646254908484,"results":"16","hashOfConfig":"17"},{"size":1636,"mtime":1653191519490,"results":"18","hashOfConfig":"17"},{"size":682,"mtime":1653498263184,"results":"19","hashOfConfig":"17"},{"size":365,"mtime":1652505590841,"results":"20","hashOfConfig":"17"},{"size":3220,"mtime":1653498625394,"results":"21","hashOfConfig":"17"},{"size":362,"mtime":1653498208386,"results":"22","hashOfConfig":"17"},{"size":835,"mtime":1653498377871,"results":"23","hashOfConfig":"17"},{"size":1564,"mtime":1653497657330,"results":"24","hashOfConfig":"17"},{"size":3187,"mtime":1646770083470,"results":"25","hashOfConfig":"17"},{"size":160,"mtime":1646265093089,"results":"26","hashOfConfig":"17"},{"size":241,"mtime":1646968626758,"results":"27","hashOfConfig":"17"},{"size":1215,"mtime":1646968765735,"results":"28","hashOfConfig":"17"},{"size":158,"mtime":1646768315726,"results":"29","hashOfConfig":"17"},{"size":207,"mtime":1646770615071,"results":"30","hashOfConfig":"17"},{"size":7240,"mtime":1653498178778,"results":"31","hashOfConfig":"17"},{"filePath":"32","messages":"33","suppressedMessages":"34","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"68ed4l",{"filePath":"35","messages":"36","suppressedMessages":"37","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"38"},{"filePath":"39","messages":"40","suppressedMessages":"41","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42"},{"filePath":"43","messages":"44","suppressedMessages":"45","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"46","messages":"47","suppressedMessages":"48","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"49","messages":"50","suppressedMessages":"51","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52"},{"filePath":"53","messages":"54","suppressedMessages":"55","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"56","messages":"57","suppressedMessages":"58","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59"},{"filePath":"60","messages":"61","suppressedMessages":"62","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63"},{"filePath":"64","messages":"65","suppressedMessages":"66","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"67","messages":"68","suppressedMessages":"69","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70"},{"filePath":"71","messages":"72","suppressedMessages":"73","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74"},{"filePath":"75","messages":"76","suppressedMessages":"77","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"78","messages":"79","suppressedMessages":"80","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"81","messages":"82","suppressedMessages":"83","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"84"},"/home/matt/Documents/new-personal-projects/mitehole/src/index.js",[],[],"/home/matt/Documents/new-personal-projects/mitehole/src/App.js",["85","86"],[],"import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\n\n// react router\nimport { Link, BrowserRouter, Route, Routes } from 'react-router-dom';\n// pages\nimport Home from './Home';\nimport About from './About';\nimport Music from './Music';\nimport Player from './Player';\nimport Buy from './Buy';\nimport Contact from './Contact';\n\n\nconst App = () => {\nreturn (\n    <>\n        <BrowserRouter>\n    <div className='Navandtitle'>\n             \n        <nav className='Nav'>\n                    <Link to=\"/\" className='Navbar-link'>Home</Link>\n                     <Link to=\"/About\" className='Navbar-link'>About</Link>\n                    <Link to=\"/Music\" className='Navbar-link'>Music</Link>\n                    <Link to=\"/Player\" className='Navbar-link'>Player</Link>\n                    <Link to=\"/Buy\" className='Navbar-link'>Buy</Link>\n                    <Link to=\"/Contact\" className='Navbar-link'>Contact</Link>\n                  \n<img src={require(\"./mite-portrait.png\")} className=\"icon\"/>\n\n        </nav>\n     \n    </div>\n          <div className='Main-banner-background'>\n         0\n</div>\n<div className='background-title'>\n      \n          <h1 className='Title'>mite</h1>\n                                          </div>  \n    <Routes>\n<Route  path=\"/\" element={<Home />} >\n</Route>\n<Route  path=\"about/\" element={<About />}>\n</Route>\n<Route  path=\"music/\" element={<Music />}>\n</Route>\n<Route  path=\"player/\" element={<Player />}>\n</Route>\n<Route  path=\"buy/\" element={<Buy />}>\n</Route>\n<Route  path=\"contact/\" element={<Contact />}>\n</Route>\n</Routes>\n</BrowserRouter>\n</>\n)\n};\n\nexport default App;","/home/matt/Documents/new-personal-projects/mitehole/src/Music.js",["87"],[],"import React, {useState} from 'react';\n// import Main from './Main'\nimport Main from './components/Main'\nimport Modal from './components/Modal'\nimport data from './components/data'\nimport Albums from './components/Albums'\n\n\n\n\nconst Music = () => {\n\n  const [show, setShow] = useState(false);\n  const [albums, setAlbums] = useState(data);\n  console.log(albums)\n\n\n    \n  return (\n    <>\n    <Modal onClose={()=> {setShow(false)}} show={show}>\n</Modal>\n    <Main>\n \n\n      <h1 className='header'>Official Mite Releases</h1>\n\n           <div className='albums'>\n            <Albums  albums={albums} />\n            \n            </div>\n\n    </Main>\n    </>\n  );\n};\n\nexport default Music;\n","/home/matt/Documents/new-personal-projects/mitehole/src/Contact.js",[],[],"/home/matt/Documents/new-personal-projects/mitehole/src/Home.js",[],[],"/home/matt/Documents/new-personal-projects/mitehole/src/Player.js",["88","89","90"],[],"import React, {useEffect} from 'react';\nimport Main from './components/Main'\nimport Paragraph from './components/Paragraph'\nimport MusicPlayer from './components/MusicPlayer';\n\n\nconst Player = () => {\n\n\n\n  return (\n<div className=\"main-player\">\n<h1 className='header'>Mite Music Player</h1>\n\n  <MusicPlayer></MusicPlayer>\n</div> \n  );\n};\n\nexport default Player;\n","/home/matt/Documents/new-personal-projects/mitehole/src/Buy.js",[],[],"/home/matt/Documents/new-personal-projects/mitehole/src/About.js",["91","92","93"],[],"import React from 'react';\nimport Main from './components/Main'\nimport Paragraph from './components/Paragraph'\n\n\nconst About = () => {\n  return (\n<Main>\n      <h1 className='header'>About Mite</h1>\n\n      \n           \n      <img src={require(\"./mite-portrait.png\")} className=\"portrait\" />\n    \n<div className='about'>\n       <div>\nmite was born  out of  Mite wanting to hear certain sounds.  it  wanted to make the most personally pleasing sounds possible (which often means displeasing others...). the \"style\" varies,. but it's becoming more and more *NOISE* as of late. \n</div>\n<div>\n      located in Toronto, ON and has also been located in Tokyo. open to collaboration of (almost) any kind.\n</div>\n   <div>\nsome words that describe  mite's music: ugly, displeasing, scary, unappealing, harsh, dissonant, relaxing, annoying, fun, dark, light, dissociative, varied, pleasing, beautiful, rich, tinny, lacking, minimal,  maximal, noisy, melodic, improvised, not considered, no thought, just feeling, comedy, live DJ set, old  keyboard with built in MIDI instruments covered with black paint, a guitar with less than 5 strings, a dusty bass, a,  the same pedal setup since the beginning, the, rock, ambient,  rock,\n</div>\n   <div>\nother projects:\n<section><a href=\"https://brianchampagne.bandcamp.com/releases\">Brian Champagne</a>\n</section>\n<a href=\"https://traumaticacid.bandcamp.com/releases\">Traumatic acid</a>\n</div>\n\n</div>\n   \n        <img src=\"https://f4.bcbits.com/img/0026884514_10.jpg\"className=\"portrait\" />\n  \n  </Main>\n  );\n};\n\nexport default About;\n","/home/matt/Documents/new-personal-projects/mitehole/src/components/data.js",["94"],[],"export default [\n      {\n        id: 0,\n        title: 'tightrope',\n        release: 2018,\n        info: 'noise rock and a little surf. no loop pedals',\n        image:'https://f4.bcbits.com/img/a3288199529_2.jpg'\n        \n    },\n    {\n        id: 1,\n        title: 'this year',\n        release: 2019,\n        info: 'this is mite trying to copy Chris Corsano/Bill Orcutt to poor effect. no loop pedals',\n        image:'https://f4.bcbits.com/img/a1683651560_2.jpg'\n        \n    },\n    {\n        id: 2,\n        title: 'live improvisation',\n        release: 2019,\n        info: 'a big mess with a few good moments. no loop pedals',\n        image:'https://f4.bcbits.com/img/a0176955027_2.jpg'\n    },\n      {\n        id: 4,\n        title: 'steam-breath',\n        release: 2019,\n        info: 'Heavy rock and Black metal inspired. no loop pedals',\n        image:'https://f4.bcbits.com/img/a2199513628_2.jpg'\n    },\n      {\n        id: 5,\n        title: 'live from mitehole',\n        release: 2019,\n        info: ' \"mushi no odori\" is a Nissenenmondai tribute. the rest are light psychedelic rock / looping noise',\n        image:'https://f4.bcbits.com/img/a1756680641_2.jpg'\n    },\n   \n      {\n        id: 6,\n        title: 'bugaboo (1)',\n        release: 2019,\n        info: 'mite  down on the farm.  freaking out in an old RV booth. Roosters, distorted guitar and pseudo-free-jazz drums',\n        image:'https://f4.bcbits.com/img/a0137819557_2.jpg'\n    },\n      {\n        id: 7,\n        title: 'Regression',\n        release: 2020,\n        info: 'over a year later,  mite regresses,.. a nauseating clean guitar, bass and drums improvisation. tinny and unappealing',\n               image:'https://f4.bcbits.com/img/a2110806232_2.jpg'\n\n    },\n      {\n        id: 8,\n        title: 'drainfly',\n        release: 2020,\n        info: ' lifecycle of the drainfly. improvised Krautrock Suite',\n        image:'https://f4.bcbits.com/img/a3104661784_2.jpg'\n\n      },\n      {\n        id: 9,\n        title: '[bup]',\n        release: 2021,\n        info: 'solo guitar - ambient, noise, pipes',\n        image:'https://f4.bcbits.com/img/a3508080776_2.jpg'\n    },\n\n          {\n        id: 10,\n        title: 'riplek',\n        release: 2021,\n        info: 'calm rock, noise, clean guitars, strange loops- compilation album',\n        image:'https://f4.bcbits.com/img/a2184174716_2.jpg'\n    },\n\n          {\n        id: 11,\n        title: 'groto1',\n        release: 2021,\n        info: 'the first album with programmed drums. bass guitar..theme of  \"Groto\" begins.., ',\n        image:'https://f4.bcbits.com/img/a3738414724_2.jpg'\n    },\n\n          {\n        id: 12,\n        title: 'groto-2',\n        release: 2021,\n        info: 'dark ambient,. album art is self explanatory',\n        image:'https://f4.bcbits.com/img/a2138139322_2.jpg'\n    },\n\n            {\n        id: 13,\n        title: 'hole',\n        release: 2022,\n        info: 'noise, clean guitar, and the hole',\n        image:'https://f4.bcbits.com/img/a2170320661_2.jpg'\n    },\n\n     {\n        id: 14,\n        title: 'swarm',\n        release: 2022,\n        info: 'well...',\n        image:'https://f4.bcbits.com/img/a4145989973_2.jpg'\n\n\n    },\n\n    \n    \n]","/home/matt/Documents/new-personal-projects/mitehole/src/components/Paragraph.js",[],[],"/home/matt/Documents/new-personal-projects/mitehole/src/components/Modal.js",["95"],[],"import React, {useState} from 'react';\n\nconst Modal = ({show, onClose, album, children}) => {\n\n    if (!show) {\n        return null\n    }\n  return (\n    <div className='modal'>\n    {children} \n{album}\n</div>\n  );\n};\n\nexport default Modal;\n\n\n","/home/matt/Documents/new-personal-projects/mitehole/src/components/Albums.js",["96","97","98","99","100","101"],[],"import React, {useState} from 'react';\nimport Modal from './Modal'\n\nconst Albums = ({albums}) => {\nconst [albumId, setAlbumId] = useState('')\n  const [show, setShow] = useState(false);\n  const [album, setAlbum] = useState('')\n\n\n const handleClick = event => {\n    const clicked = event.target.id\n    const filterId = albums.filter(album => album.id == clicked )\n        setAlbumId(filterId[0].id)\n      setShow(true)\n  }\n  \n    return (\n    <>\n\n <Modal  show={show} album={album}>\n{albums.map((album) => {\nconst {id, title, release, info, image, onClose} = album;\n   if( album.id == albumId ) {\nreturn (\n<div className=\"modal-album\"key={id}> \n<h2 className='modal-album-title'>{title}</h2>\n<div className='modal-album-release'>{release}</div>\n<img src={image} alt={title} />\n<div className='modal-album-info'>{info}</div>\n<button onClick={() => setShow(false)}>close</button>   \n\n</div>\n)}\n})}\n</Modal>\n\n{albums.map((album) => {\nconst {id, title, release, info, image} = album;\nreturn (\n<div className=\"album\"key={id}> \n<img src={image} id={id} alt=\"\" onClick={handleClick} />\n<h6 className='.album-title'>{title}</h6>\n<div className='.album-title'>{release}</div>\n</div>\n\n)\n})}\n\n</>\n    )\n}\n\nexport default Albums;","/home/matt/Documents/new-personal-projects/mitehole/src/components/Main.js",[],[],"/home/matt/Documents/new-personal-projects/mitehole/src/components/Post.js",[],[],"/home/matt/Documents/new-personal-projects/mitehole/src/components/MusicPlayer.js",["102","103","104","105"],[],"import React, {useRef, useEffect, useState} from 'react';\nimport wami from '../mp3s/wami.mp3'\nimport unreleased1 from '../mp3s/unreleased-1.mp3'\n\n\n// Music player\nconst songs = [\n    {\n        name: 'wami',\n        displayName: 'Q-Q Birds - Clean',\n        artist: 'Mite',\n        date: '2018',\n        file: wami,\n        albumArt: 'https://f4.bcbits.com/img/a1756680641_2.jpg'\n    },\n    \n    {\n        name: 'unreleased-1',\n        displayName: 'Unreleased-1',\n        artist: 'Mite',\n        date: '2020',\n        file: unreleased1,\n        albumArt: 'albums/thumbnails/hole.jpg'\n\n\n    },\n\n\n    ]\n\nconst MusicPlayer = () => {\n    const [songTitle, setSongTitle] = useState('')\n    const [songArtist, setSongArtist] = useState('')\n    const [songIndex, setSongIndex] = useState(0)\n    const [songArt, setSongArt] = useState(null)\n    const [songDate, setSongDate] = useState('')\n\n    const [trackProgress, setTrackProgress] = useState('0')\n    const [progressPercent, setProgressPercent] = useState('0')\n\n\n\n    const [isPlaying, setIsPlaying] = useState(false)\n    const [duration, setDuration] = useState(null)\n    \nconst getAudio = () => {\n\n\n     if (songIndex > songs.length - 1) {\n         \n        setSongIndex(0);\n        return new Audio(songs[0].file)    }\n   \n           if (songIndex < 0) {\n         console.log(songIndex < 0)\n         let songsLength = songs.length - 1\n        setSongIndex(songsLength);\n        console.log(songsLength)\n        return new Audio(songs[songsLength].file)\n    }\n    else { \n        \n        return new Audio(songs[songIndex].file)\n       }\n}\n\n    //  if (songIndex < 0) {\n    //      console.log(songIndex < 0)\n    //      let songsLength = songs.length - 1\n    //     setSongIndex(songsLength);\n    //     console.log(songsLength)\n    //     return new Audio(songs[songsLength].file)\n    // }\n\n    const progressBar = useRef();\n    const audioRef = useRef(getAudio());\n    const intervalRef = useRef();\n\n    const loadSong = (song) => {\n        setSongTitle(songs[songIndex].displayName)\n        setSongArtist(songs[songIndex].artist)\n        setSongDate(songs[songIndex].date)\n        setSongArt(songs[songIndex].albumArt)\n        // audioRef.current.addEventListener('loadedmetadata', (e) => {\n \n    };\n\n\n    const startTimer = () => {\n        // Clear any timers already running\n        clearInterval(intervalRef.current);\n  console.log(audioRef.current.currentTime)\n       intervalRef.current = setInterval(() => {\n            if (isPlaying) {\n            setTrackProgress(Math.floor(audioRef.current.currentTime));\n\n            // if (duration != null) {\n\n            //     setProgressPercent((trackProgress/duration) * 100)\n            //     console.log(progressPercent)\n            // }\n        \n       }\n\n        }, [1000]);\n      \n  }\n      \n\n// Play\nconst playSong = () => {\n    setIsPlaying(true)\n    \n}\n\nconst pauseSong = () => {\n    setIsPlaying(false);\n\n    }\n\n    \nuseEffect( () => {\n \n        if (audioRef != null && isPlaying) {\n            startTimer()\n            audioRef.current.play();\n        }\n        else if(audioRef != null && !isPlaying)  {\n            audioRef.current.pause();\n\n        }\n    // let audio = document.querySelector('#audio')\n    console.log(isPlaying)\n}       \n, [isPlaying])\n\n\n\n    // when songIndex increases, load next song in songs array. \n    // when songIndex drops below zero, set to the final array index\n    // i managed to make this work by returning automatically on songIndex reset (before, it was executing loadSong before the state had a chance to update)\n        useEffect( () => {\n            console.log(songIndex)\n\n            audioRef.current.pause()\n            setIsPlaying(false);\n\n            if (songIndex > songs.length - 1) {\n                alert('no more songs')\n            }\n            if (songIndex < 0) {\n                return\n            }\n            console.log(songIndex)\n\n            loadSong(songs[songIndex]);\n            audioRef.current = new Audio(songs[songIndex].file)\n\n\n\n              }\n        , [ songIndex])\n\n\n// this one took me a while - setting total duration of each track\n        useEffect( () => {\n            if (audioRef.current) {\n            audioRef.current.addEventListener('loadedmetadata', (e) => {\n                if (audioRef.current.duration != NaN) {\n                    console.log(audioRef)\n\n                    const dur = Math.floor(audioRef.current.duration)\n                    const minutes = Math.floor(dur / 60);\n                    const seconds = dur - minutes * 60;\n                    setDuration(`${minutes}:${seconds}`) \n                    setProgressPercent((audioRef.current.currentTime/dur) * 100)\n                }\n              }) }\n        }       \n        , [audioRef, songIndex])\n    \n\n        // const setProgressBar = (e) => {\n        //     console.log('dwsf')\n        //     const width = e.clientX;\n        //     const clickX = e.nativeEvent.offsetX;\n        //     console.log(audioRef)\n        //     const {duration} = audioRef;\n        // const ok = (clickX / width) * duration;\n\n        //     setTrackProgress(ok)\n\n        // }\n    return (\n    <>\n\n<div className=\"player-container\">\n\n\n  <div className=\"img-container\">\n      <img src={songArt} alt=\"Album Art\" id=\"albumart2\"/>\n     <audio id=\"audio\"><source src={audioRef}  type=\"audio/mp3\" /></audio>\n  </div>\n  <h2 id=\"title\">{songTitle}</h2>\n  <h3 id=\"artist\">{songArtist} - {songDate}</h3>\n  <div className=\"progress-container\" id=\"progress-container\"  >\n  <div className=\"progress\" id=\"progress\" style={{width : `${progressPercent}%`}}  ref={progressBar}></div>\n  <div className=\"duration-wrapper\">\n      <span className=\"current-time\">{trackProgress}</span>\n      <span className=\"duration\">{duration}</span>\n  </div>\n  <div className=\"player-controls\">\n      <i onClick={() => setSongIndex(songIndex - 1)} className=\"fas fa-backward\" id=\"prev\" title=\"backward\"></i>\n      <i onClick={playSong} className={!isPlaying && 'fas fa-play main-button'} id=\"play\" title=\"play\"></i>\n      <i onClick={pauseSong} className={isPlaying && 'fas fa-pause main-button'} id=\"pause\" title=\"pause\"></i>\n      <i onClick={() => setSongIndex(songIndex + 1)} className=\"fas fa-forward\" id=\"next\" title=\"forward\"></i>\n\n  </div>\n  </div>\n</div>\n\n</>\n    )\n}\n\nexport default MusicPlayer;\n\n\n        // const updateProgressBar = (e) => {\n        //     const width = e.clientX;\n        //     const clickX = e.nativeEvent.offsetX;\n        //     console.log(audioRef.currentTime)\n\n        //     console.log(e)\n        //     if (isPlaying) {\n                \n    \n\n        //  //    Update progress bar\n        //  const progressPercent = (audioRef.currentTime/duration) * 100;\n        //  console.log(progressBar)\n        //      progressBar.current.style.setProperty('width', `${progressPercent}%`);\n\n        //  // Calculate display for current\n        //  const currentMinutes = Math.floor(currentTime / 60);\n        //  let currentSeconds = Math.floor(currentTime % 60);\n        //  if (currentSeconds < 10) {\n        //      currentSeconds = `0${currentSeconds}`;\n        //  }\n        //  currentTimeEl.textContent = `${currentMinutes}:${currentSeconds}`\n\n        // }\n        \n        // }\n        // ",{"ruleId":"106","severity":1,"message":"107","line":2,"column":8,"nodeType":"108","messageId":"109","endLine":2,"endColumn":16},{"ruleId":"110","severity":1,"message":"111","line":30,"column":1,"nodeType":"112","endLine":30,"endColumn":61},{"ruleId":"106","severity":1,"message":"113","line":14,"column":18,"nodeType":"108","messageId":"109","endLine":14,"endColumn":27},{"ruleId":"106","severity":1,"message":"114","line":1,"column":16,"nodeType":"108","messageId":"109","endLine":1,"endColumn":25},{"ruleId":"106","severity":1,"message":"115","line":2,"column":8,"nodeType":"108","messageId":"109","endLine":2,"endColumn":12},{"ruleId":"106","severity":1,"message":"116","line":3,"column":8,"nodeType":"108","messageId":"109","endLine":3,"endColumn":17},{"ruleId":"106","severity":1,"message":"116","line":3,"column":8,"nodeType":"108","messageId":"109","endLine":3,"endColumn":17},{"ruleId":"110","severity":1,"message":"111","line":13,"column":7,"nodeType":"112","endLine":13,"endColumn":72},{"ruleId":"110","severity":1,"message":"111","line":34,"column":9,"nodeType":"112","endLine":34,"endColumn":86},{"ruleId":"117","severity":1,"message":"118","line":1,"column":1,"nodeType":"119","endLine":115,"endColumn":2},{"ruleId":"106","severity":1,"message":"120","line":1,"column":16,"nodeType":"108","messageId":"109","endLine":1,"endColumn":24},{"ruleId":"106","severity":1,"message":"121","line":7,"column":17,"nodeType":"108","messageId":"109","endLine":7,"endColumn":25},{"ruleId":"122","severity":1,"message":"123","line":12,"column":54,"nodeType":"124","messageId":"125","endLine":12,"endColumn":56},{"ruleId":"126","severity":1,"message":"127","line":21,"column":21,"nodeType":"128","messageId":"129","endLine":21,"endColumn":23},{"ruleId":"106","severity":1,"message":"130","line":22,"column":41,"nodeType":"108","messageId":"109","endLine":22,"endColumn":48},{"ruleId":"122","severity":1,"message":"123","line":23,"column":17,"nodeType":"124","messageId":"125","endLine":23,"endColumn":19},{"ruleId":"106","severity":1,"message":"131","line":38,"column":28,"nodeType":"108","messageId":"109","endLine":38,"endColumn":32},{"ruleId":"132","severity":1,"message":"133","line":135,"column":3,"nodeType":"134","endLine":135,"endColumn":14,"suggestions":"135"},{"ruleId":"132","severity":1,"message":"136","line":162,"column":11,"nodeType":"134","endLine":162,"endColumn":23,"suggestions":"137"},{"ruleId":"138","severity":1,"message":"139","line":169,"column":21,"nodeType":"124","messageId":"140","endLine":169,"endColumn":53},{"ruleId":"122","severity":1,"message":"141","line":169,"column":47,"nodeType":"124","messageId":"125","endLine":169,"endColumn":49},"no-unused-vars","'ReactDOM' is defined but never used.","Identifier","unusedVar","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'setAlbums' is assigned a value but never used.","'useEffect' is defined but never used.","'Main' is defined but never used.","'Paragraph' is defined but never used.","import/no-anonymous-default-export","Assign array to a variable before exporting as module default","ExportDefaultDeclaration","'useState' is defined but never used.","'setAlbum' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","array-callback-return","Array.prototype.map() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","'onClose' is assigned a value but never used.","'info' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'startTimer'. Either include it or remove the dependency array.","ArrayExpression",["142"],"React Hook useEffect has a missing dependency: 'loadSong'. Either include it or remove the dependency array.",["143"],"use-isnan","Use the isNaN function to compare with NaN.","comparisonWithNaN","Expected '!==' and instead saw '!='.",{"desc":"144","fix":"145"},{"desc":"146","fix":"147"},"Update the dependencies array to be: [isPlaying, startTimer]",{"range":"148","text":"149"},"Update the dependencies array to be: [loadSong, songIndex]",{"range":"150","text":"151"},[3257,3268],"[isPlaying, startTimer]",[4038,4050],"[loadSong, songIndex]"]